<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Bootstrap v4 Blog</title>
    <link>http://blog.yucapri.net/</link>
    <description>Recent content on Hugo Bootstrap v4 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Mar 2024 23:32:59 +0800</lastBuildDate>
    <atom:link href="http://blog.yucapri.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>http://blog.yucapri.net/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>http://blog.yucapri.net/2014/09/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme.</description>
    </item>
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://blog.yucapri.net/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>http://blog.yucapri.net/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like&#xA;▾ &amp;lt;root&amp;gt;/&#xD;▾ images/&#xD;logo.png&#xD;should become</description>
    </item>
    <item>
      <title>appwrite使用</title>
      <link>http://blog.yucapri.net/2024/03/appwrite%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 25 Mar 2024 23:32:59 +0800</pubDate>
      <guid>http://blog.yucapri.net/2024/03/appwrite%E4%BD%BF%E7%94%A8/</guid>
      <description>categories: [日常] appwrite使用 1.注册账户 https://cloud.appwrite.io/register&#xA;2.创建一个组织 输入组织名称，选择免费计划（starter） 3.点击 Get started 4.点击 create project 创建工程 输入project id 默认区域，直接点击create 等待页面刷新&#xA;5.左侧菜单选择function 6.点击create function 选择node 直接下一步 还是下一步 依然下一步 选择关联github 登录后点击install 输入新建代码仓库的名称 根目录输入/，然后下一步 等待页面刷新，可以看到最新的ci结果 7.通过页面上Domains:域名访问即可 刷新页面查看最新ci结果 </description>
    </item>
    <item>
      <title>TESTNG</title>
      <link>http://blog.yucapri.net/2022/10/testng/</link>
      <pubDate>Fri, 07 Oct 2022 08:49:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/testng/</guid>
      <description>TESTNG </description>
    </item>
    <item>
      <title>selinium</title>
      <link>http://blog.yucapri.net/2022/10/selinium/</link>
      <pubDate>Fri, 07 Oct 2022 08:48:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/selinium/</guid>
      <description>selinium </description>
    </item>
    <item>
      <title>javascript基础</title>
      <link>http://blog.yucapri.net/2022/10/javascript%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 07 Oct 2022 08:47:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/javascript%E5%9F%BA%E7%A1%80/</guid>
      <description>javascript基础 </description>
    </item>
    <item>
      <title>python基础</title>
      <link>http://blog.yucapri.net/2022/10/python%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 07 Oct 2022 08:47:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/python%E5%9F%BA%E7%A1%80/</guid>
      <description>python基础 </description>
    </item>
    <item>
      <title>测试理论</title>
      <link>http://blog.yucapri.net/2022/10/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/</link>
      <pubDate>Fri, 07 Oct 2022 08:46:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/</guid>
      <description>测试理论 </description>
    </item>
    <item>
      <title>爬虫基础</title>
      <link>http://blog.yucapri.net/2022/10/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 07 Oct 2022 00:03:00 +0800</pubDate>
      <guid>http://blog.yucapri.net/2022/10/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</guid>
      <description>爬虫基础 开发过程中，有些初学者经常会问，如何调用UIButton的响应时传入一个参数，但是， - (void)addTarget:(id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents; 原文链接</description>
    </item>
    <item>
      <title>Markdown语法之复选框</title>
      <link>http://blog.yucapri.net/2021/02/markdown%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%A4%8D%E9%80%89%E6%A1%86/</link>
      <pubDate>Mon, 08 Feb 2021 13:17:59 +0800</pubDate>
      <guid>http://blog.yucapri.net/2021/02/markdown%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%A4%8D%E9%80%89%E6%A1%86/</guid>
      <description>categories: [日常, 学习] 学习内容：Markdown复选框 在无序列表符号后面加上[]或者[x]代表选中或者未选中情况&#xA;- [x] ROW1 - [ ] ROW2 或者&#xA;+ [x] ROW1 + [ ] ROW2 或者&#xA;* [x] ROW1 * [ ] ROW2 效果如下：&#xA;ROW1 ROW2 </description>
    </item>
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://blog.yucapri.net/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://blog.yucapri.net/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://blog.yucapri.net/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://blog.yucapri.net/2014/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.&#xA;Save it somewhere specific as we will be using it in the next step.&#xA;More complete instructions are available at installing hugo&#xA;Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.</description>
    </item>
  </channel>
</rss>
